<launch>
  <arg name="robot_name"                    default="sgr532"/>
  <arg name="robot_model"                   default="$(arg robot_name)"/>
  <arg name="use_default_rviz"              default="false"/>
  <arg name="external_urdf_loc"             default="$(find sagittarius_descriptions)/urdf/spark_sgr_external.urdf.xacro"/>
  <arg name="use_world_frame"               default="false"/>
  <arg name="rviz_file_name"                default="spark_sgr532.rviz"/>



  <!-- specify the planning pipeline -->
  <arg name="pipeline" default="ompl" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find sagittarius_moveit)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- By default, we will load or override the robot_description -->
  <arg name="load_robot_description" default="false"/>

  <!-- Choose controller manager: fake, simple, sagittarius_arm, or ros_control -->
  <arg name="moveit_controller_manager" default="sagittarius_arm" />
  <!-- Set execution mode for fake execution controllers -->
  <arg name="fake_execution_type" default="interpolate" />

  <!-- By default, hide joint_state_publisher's GUI in 'fake' controller_manager mode -->
  <arg name="use_gui" default="false" />
  <arg name="use_rviz" default="true" />

  <!-- If needed, broadcast static tf for robot root -->
  <include file="$(find sagittarius_descriptions)/launch/description.launch">
    <arg name="robot_name"        value="$(arg robot_name)"/>
    <arg name="robot_model"       value="$(arg robot_model)"/>
    <arg name="joint_pub_gui"     value="false"/>
    <arg name="use_default_rviz"  value="$(arg use_default_rviz)"/>
    <arg name="external_urdf_loc" value="$(arg external_urdf_loc)"/>
    <arg name="use_world_frame"   value="$(arg use_world_frame)"/>

  </include>

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ns="$(arg robot_name)">
    <param name="use_gui" value="$(arg use_gui)"/>
    <rosparam param="source_list">[sagittarius_joint_states]</rosparam>
  </node>

  <include file="$(find sdk_sagittarius_arm)/launch/sdk_sagittarius_arm.launch">
    <arg name="robot_name"                       value="$(arg robot_name)"/>
    <arg name="robot_model"                      value="$(arg robot_model)"/>
  </include>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find sagittarius_moveit)/launch/move_group.launch" ns="$(arg robot_name)">
    <arg name="robot_name"  value="$(arg robot_name)"/>
    <arg name="robot_model" value="$(arg robot_model)"/>
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
    <arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(dirname)/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="robot_name"  value="$(arg robot_name)"/>
    <arg name="robot_model" value="$(arg robot_model)"/>
    <arg name="rviz_config" value="$(dirname)/$(arg rviz_file_name)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(dirname)/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
